type User {
  uuid: ID!
  name: String!
  email: String!
  password: String!
}

type UserInfo {
  uuid: ID!
  name: String!
  email: String!
}

input UserInput {
  name: String!
  email: String!
  password: String!
}

type AuthPayload {
  user: UserInfo!
  accessToken: String!
  refreshToken: String!
}

type UserWithToken {
  user: UserInfo!
  token: String!
}

type Query {
  user: UserWithToken
  users: [UserWithAvatar!]!
}

type Mutation {
  refreshToken(refreshToken: String): AuthPayload!
  createUser(input: UserInput!): AuthPayload!
  logInUser(email: String!, password: String!): AuthPayload!
  logOutUser: Boolean!
}
